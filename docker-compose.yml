version: '3.3'

networks:
  talk_network:

services:
  mysql:
    networks:
      - talk_network
    image: mysql:8.0.21
    container_name: mysql
    restart: unless-stopped
    ports:
      - "4306:3306"
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    ports:
      - "8080:80"
    depends_on:
      - mysql
    environment:
      PMA_HOST: mysql    
    networks:
      - talk_network
  nginx:
    networks:
      - talk_network
    depends_on:
      - php
      - mysql
    image: nginx:stable-alpine
    container_name: nginx
    restart: on-failure
    volumes:
      - ./src:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "8088:80"
  php:
    networks:
      - talk_network
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: php
    volumes:
      - ./src:/var/www/html
    restart: on-failure
    ports:
      - "9000:9000"
    user: ${LOCAL_USER}
  composer:
    networks:
      - talk_network
    image: composer:latest
    container_name: composer
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    depends_on:
      - php
  npm:
    networks:
      - talk_network
    image: node:13.7
    container_name: npm
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    entrypoint: ['npm']
  artisan:
    networks:
      - talk_network
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: artisan
    volumes:
      - ./src:/var/www/html
    depends_on:
      - mysql
    working_dir: /var/www/html
    entrypoint: ['/var/www/html/artisan']
